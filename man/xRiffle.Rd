% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/xRiffle.R
\name{xRiffle}
\alias{xRiffle}
\alias{xRiffle_}
\title{xRiffle}
\usage{
xRiffle(val, coll)

xRiffle_(val, ...)
}
\arguments{
\item{val}{an arbitrary value. The value to intersperse
    between elements in the list.}

\item{coll}{a collection. The collection to insert elements throughout.}

\item{...}{see above.}
}
\value{
A list.
}
\description{
Insert an element in between each element of a list.
}
\section{Type Signatures}{

    any -> |any| -> [any]
}

\section{Corner Cases}{

   Returns the empty list if \bold{coll} is empty.
}

\section{Corner Cases}{

   Returns the empty list if \bold{coll} is length-zero.
}

\section{Rcpp}{


    This function is written using C++, and should be quite performant.
}
\examples{

# 1. a toy use

xFromChars(xRiffle_(',', 'a', 'b', 'c'))

# "a,b,c"
#
# a more idiomatic way to achieve this would be with
#
# xImplode_(',', 'a', 'b', 'c')

# 2. inject elements into a list.
#
# by combining xRiffle with xJoin you can inject lists between
# each element of a collection. The following example isn't very
# practicaly, but demonstrates the complex lists you can build with
# xRiffle well.

x_(paste(1:5)) $ xRiffle(list('+', '10', '*')) $ xJoin() $ x_FromWords()

# "1 + 10 * 2 + 10 * 3 + 10 * 4 + 10 * 5"
}

