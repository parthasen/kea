% Generated by roxygen2 (4.0.1.99): do not edit by hand
\name{xUnzipKeys}
\alias{xUnzipKeys}
\alias{xUnzipKeys_}
\title{xUnzipKeys}
\usage{
xUnzipKeys(coll)

xUnzipKeys_(...)
}
\arguments{
\item{coll}{a named collection. The collection to split into index, element pairs.}

\item{...}{see above.}
}
\value{
A named list.
}
\description{
Split a named collection into a list of name: value list pairs.
}
\details{
\bold{xUnzipKeys} is the inverse function to \bold{xZipKeys} - it
    takes a named collection and converts it into a list of
    key, value list pairs. This is primarily intended for allowing functions that
    cannot read collection names - like map and select - to be able to operate
    on both a value and its key simultaneously.
}
\section{Type Signature}{

    |any| -> [[ <character>, ...any ]]
}

\section{Corner Cases}{

     Returns \code{list()} if \code{coll} is length-zero.
}

\section{Rcpp}{


    This function is written using C++, and should be quite performant.
}
\examples{

# 1. xUnzipkeys can be useful for
#    reformatting a named list before passing it
#    to a function like map or select, allowing those
#    functions access to both the key and value.

irish_birds <- list(
	'Grey Heron'  = 'Ardeidae',
	'Black Stork' = 'Ciconiiformes',
	'Giant Ibis'  = 'Ciconiiformes'
)

x_(irish_birds) $ xUnzipKeys() $ x_Map(xUnspread((key : val) := {

		xFromWords_('the', key, 'is of order', val)

	})
)

# list(
#     "the  Grey Heron is of order Ardeidae",
#     "the  Black Stork is of order Ciconiiformes",
#     "the  Giant Ibis is of order Ciconiiformes")
}
\seealso{
Other key_functions: \code{\link{xAddKeys}},
  \code{\link{xAddKeys_}}; \code{\link{xIndicesOf}},
  \code{\link{xIndicesOf_}}; \code{\link{xIndicesTo}};
  \code{\link{xKeysOf}}, \code{\link{xKeysOf_}};
  \code{\link{xLocate}}, \code{\link{xLocate_}};
  \code{\link{xUnzipIndices}},
  \code{\link{xUnzipIndices_}}; \code{\link{xValuesOf}},
  \code{\link{xValuesOf_}}; \code{\link{xZipKeys}},
  \code{\link{xZipKeys_}}

Other reshaping_functions: \code{\link{xAppend}},
  \code{\link{xAppend_}}; \code{\link{xChop}},
  \code{\link{xChop_}}; \code{\link{xChunk}},
  \code{\link{xChunk_}}; \code{\link{xFlatten}},
  \code{\link{xFlatten_}}; \code{\link{xGather}},
  \code{\link{xGather_}}; \code{\link{xGroupBy}},
  \code{\link{xGroupBy_}}; \code{\link{xJoin}},
  \code{\link{xJoin_}}; \code{\link{xOneOf}},
  \code{\link{xOneOf_}}; \code{\link{xPrepend}},
  \code{\link{xPrepend_}}; \code{\link{xRecycle}},
  \code{\link{xRecycle_}}; \code{\link{xRepeat}},
  \code{\link{xRepeat_}}; \code{\link{xReverse}},
  \code{\link{xReverse_}}; \code{\link{xShuffle}},
  \code{\link{xShuffle_}}; \code{\link{xSortBy}},
  \code{\link{xSortBy_}}; \code{\link{xTabulate}},
  \code{\link{xTabulate_}}; \code{\link{xUnzipIndices}},
  \code{\link{xUnzipIndices_}}; \code{\link{xZipKeys}},
  \code{\link{xZipKeys_}}; \code{\link{xZip}},
  \code{\link{xZip_}}
}

