% Generated by roxygen2 (4.0.1.99): do not edit by hand
\name{xChoose}
\alias{xChoose}
\alias{xChoose_}
\title{xChoose}
\usage{
xChoose(num, coll)

xChoose_(num, ...)
}
\arguments{
\item{num}{a nonnegative whole number. The number of elements to choose
   from \bold{coll}.}

\item{coll}{a collection. The collection to draw elements from.}

\item{...}{see above.}
}
\value{
A list of lists, with each list containing \bold{num} elements.
}
\description{
Enumerate all ways of choosing several elements from a collection.
}
\details{
\bold{xChoose} enumerates all ways of choosing \bold{num} distinct
    elements from a larger collection, where order doesn't matter.

    The number of ways of choosing \bold{num} elements from a collection
    is given by the base R function \code{choose(num, length(coll))}.
}
\section{Corner Cases}{

     Returns the empty list if \bold{num} is zero.
}
\examples{

# 1. How many ways can you get one or more royals from a random hand of two cards?
#    Determine by exhaustive search.

cards <-x_(xProdSetOf_(
	c('spades', 'hearts', 'diamonds', 'clubs'),
	c('ace', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King') ))

pairs <- cards $ xChoose(2)

royals <- c('Jack', 'Queen', 'King')

pairs $ xPoll( xUnspread((card1 : card2) := {

	rank1 <- xSecondOf(card1)
	rank2 <- xSecondOf(card2)

	xIsMember(rank1, royals) || xIsMember(rank2, royals)
}) )

# 546 different ways
}
\seealso{
Other combinatoric_functions: \code{\link{xCycle}},
  \code{\link{xCycle_}}; \code{\link{xPowerSetOf}},
  \code{\link{xPowerSetOf_}}; \code{\link{xProdSetOf}},
  \code{\link{xProdSetOf_}}
}

